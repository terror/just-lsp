name: CI

on:
  pull_request:
    branches:
    - '*'
  push:
    branches:
    - master
  workflow_dispatch:

defaults:
  run:
    shell: bash

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: 'pages'
  cancel-in-progress: true

env:
  RUSTFLAGS: --deny warnings

jobs:
  lint:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4

    - uses: Swatinem/rust-cache@v2

    - name: Clippy
      run: cargo clippy --all --all-targets

    - name: Format
      run: cargo fmt --all -- --check

    - name: Install Dependencies
      run: |
        sudo apt-get update
        sudo apt-get install ripgrep shellcheck

    - name: Check for Forbidden Words
      run: ./bin/forbid

    - name: Check /bin scripts
      run: shellcheck bin/*

  msrv:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4

    - uses: actions-rust-lang/setup-rust-toolchain@v1

    - uses: Swatinem/rust-cache@v2

    - name: Check
      run: cargo check

  test:
    strategy:
      matrix:
        os:
        - ubuntu-latest
        - macos-latest
        - windows-latest

    runs-on: ${{matrix.os}}

    steps:
    - uses: actions/checkout@v4

    - name: Remove Broken WSL bash executable
      if: ${{ matrix.os == 'windows-latest' }}
      shell: cmd
      run: |
        takeown /F C:\Windows\System32\bash.exe
        icacls C:\Windows\System32\bash.exe /grant administrators:F
        del C:\Windows\System32\bash.exe

    - uses: Swatinem/rust-cache@v2

    - name: Test
      run: cargo test --all

  build-web:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Bun
        uses: oven-sh/setup-bun@v1
        with:
          bun-version: latest

      - name: Setup Pages
        uses: actions/configure-pages@v4

      - name: Install dependencies
        run: bun install

      - name: Test
        run: bun test

      - name: Build
        run: bun run build

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: './dist'

  deploy-web:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}

    runs-on: ubuntu-latest

    needs: build

    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
